<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.icutool.mapper.MessageBrokerMapper">

    <resultMap type="cn.icutool.domain.entity.MessageBroker" id="MessageBrokerMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="msgType" column="msg_type" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="delFlag" column="del_flag" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, content, msg_type, create_time, update_time, user_id, del_flag    </sql>

    <select id="queryPage" resultMap="MessageBrokerMap">
        select
        <include refid="Base_Column_List"/>
        from message_broker
        where user_id = #{userId}
        <if test="keyword != null and keyword != ''">
            and content like concat('%',#{keyword},'%')
        </if>
        order by create_time desc
        limit #{pageNum}, #{pageSize}
    </select>
    <!--查询单个-->
    <select id="selectByPrimaryKey" resultMap="MessageBrokerMap">
        select
        <include refid="Base_Column_List"/>
        from message_broker
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="MessageBrokerMap">
        select
        <include refid="Base_Column_List"/>
        from message_broker
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="content != null and content != ''">
                and content = #{content}
            </if>
            <if test="msgType != null">
                and msg_type = #{msgType}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="delFlag != null">
                and del_flag = #{delFlag}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from message_broker
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="content != null and content != ''">
                and content = #{content}
            </if>
            <if test="msgType != null">
                and msg_type = #{msgType}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="delFlag != null">
                and del_flag = #{delFlag}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into message_broker(content, msg_type, create_time, update_time, user_id, del_flag)
        values (#{content}, #{msgType}, #{createTime}, #{updateTime}, #{userId}, #{delFlag})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into message_broker(content, msg_type, create_time, update_time, user_id, del_flag)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.content}, #{entity.msgType}, #{entity.createTime}, #{entity.updateTime}, #{entity.userId}, #{entity.delFlag})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into message_broker(content, msg_type, create_time, update_time, user_id, del_flag)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.content}, #{entity.msgType}, #{entity.createTime}, #{entity.updateTime}, #{entity.userId}, #{entity.delFlag})
        </foreach>
        on duplicate key update
        content = values(content)msg_type = values(msg_type)create_time = values(create_time)update_time =
        values(update_time)user_id = values(user_id)del_flag = values(del_flag)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update message_broker
        <set>
            <if test="content != null and content != ''">
                content = #{content},
            </if>
            <if test="msgType != null">
                msg_type = #{msgType},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag},
            </if>
        </set>
        where id = #{id}
    </update>


</mapper>

